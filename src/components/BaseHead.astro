---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import type { ImageMetadata } from 'astro';
import { SITE_TITLE } from '../consts';
import Analytics from '@vercel/analytics/astro';

interface Props {
	title: string;
	description: string;
	image?: ImageMetadata;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
{image && <meta property="og:image" content={new URL(image.src, Astro.url)} />}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
{image && <meta property="twitter:image" content={new URL(image.src, Astro.url)} />}

<!-- Vercel Analytics -->
<Analytics />

<!-- Loading Overlay -->
<div id="loading-overlay" class="loading-overlay"></div>

<script>
	// Fast, subtle loading animation for page transitions
	document.addEventListener('DOMContentLoaded', function() {
		const loadingOverlay = document.getElementById('loading-overlay');
		if (!loadingOverlay) return;
		
		// Show loading on page load
		loadingOverlay.classList.add('active');
		
		// Hide loading when page is fully loaded
		window.addEventListener('load', function() {
			setTimeout(() => {
				loadingOverlay.classList.remove('active');
			}, 50);
		});
		
		// Show loading on navigation
		document.addEventListener('click', function(e) {
			const target = e.target as HTMLElement | null;
			const link = target?.closest('a[href]') as HTMLAnchorElement | null;
			if (link && link.hostname === window.location.hostname) {
				loadingOverlay.classList.add('active');
			}
		});
	});
</script>
